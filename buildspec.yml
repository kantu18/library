version: 0.2

phases:
  pre_build:
    commands:
      - sudo yum install java-21-amazon-corretto
      - export JAVA_HOME=/usr/lib/jvm/java-21-amazon-corretto.x86_64
      - export PATH=$JAVA_HOME/bin:$PATH
      - java -version  # Verify Java version
      - curl -O https://downloads.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz
      - tar xzvf apache-maven-3.9.8-bin.tar.gz
      - sudo mv apache-maven-3.9.8 /usr/local/apache-maven
      - export PATH=/usr/local/apache-maven/bin:$PATH
      - mvn -v  # Verify Maven version
      - echo Installing MySQL...
      - sudo wget https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
      - sudo dnf install mysql80-community-release-el9-1.noarch.rpm -y
      - sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023
      - sudo dnf install mysql-community-client -y
      - sudo dnf install mysql-community-server -y
      - sudo systemctl start mysqld  
      - mvn clean install  # Build the project

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/bookstore.jar
