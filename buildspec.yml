version: 0.2

phases: # Set the Java runtime version to Amazon Corretto 21
  pre_build:
    commands:
      - sudo yum install java-21-amazon-corretto
      - mvn clean install  # Run the Maven build
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=975050343452.dkr.ecr.eu-north-1.amazonaws.com/snehasish_bookstore  # Set the ECR repository URI
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $REPOSITORY_URI  # Login to ECR
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)  # Get the commit hash
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')  # Tag the image with the build ID
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .  # Build Docker image
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG  # Tag the Docker image with the build ID
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest  # Push the latest tag to ECR
      - docker push $REPOSITORY_URI:$IMAGE_TAG  # Push the build-specific tag to ECR
      - echo Writing image definitions file...
      - printf '[{"name":"course-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json  # Generate image definitions for ECS
      # add your container name here, if different from 'course-service'
      - DOCKER_CONTAINER_NAME=snehasish_bookstore  # Container name for ECS
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json  # Update image definitions
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json  # Print image definitions for verification

artifacts:
  files:
    - imagedefinitions.json  # Save image definition file for ECS deployment
    - target/bookstore.jar  # Include the built JAR artifact for reference (if needed)
